name: Persistent RDP with OpenVPN and Auto-Save via API

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 1440

    steps:
      # تثبيت OpenVPN
      - name: Install OpenVPN
        run: choco install openvpn -y

      # الاتصال بالـ OpenVPN
      - name: Connect to OpenVPN
        run: |
          $ovpnConfig = "${{ secrets.OPENVPN_CONFIG }}"
          $ovpnPath = "$env:ProgramData\OpenVPN\config\client.ovpn"

          if (-not (Test-Path $ovpnPath)) {
              New-Item -ItemType File -Path $ovpnPath -Force
              Set-Content -Path $ovpnPath -Value $ovpnConfig -Encoding UTF8
          }

          $vpnRunning = Get-Process openvpn -ErrorAction SilentlyContinue
          if (-not $vpnRunning) {
              Start-Process -FilePath "C:\Program Files\OpenVPN\bin\openvpn.exe" `
                -ArgumentList "--config `"$ovpnPath`"" `
                -WindowStyle Hidden
              Start-Sleep -Seconds 25
          }

      # تفعيل RDP وحساب دائم
      - name: Enable RDP and Persistent Account
        run: |
          $username = "PersistentRDP"
          $password = "admin@123"

          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\' -name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

          if (-not (Get-LocalUser -Name $username -ErrorAction SilentlyContinue)) {
              New-LocalUser -Name $username -Password (ConvertTo-SecureString $password -AsPlainText -Force) -AccountNeverExpires
              Add-LocalGroupMember -Group "Administrators" -Member $username
              Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username
          }

      # حفظ معلومات RDP في s.txt
      - name: Save RDP info locally
        run: |
          $filePath = "s.txt"
          $username = "PersistentRDP"
          $password = "admin@123"
          $vpnIP = (Invoke-WebRequest -Uri "http://ifconfig.me/ip").Content.Trim()
          $time = Get-Date -Format "yyyy-MM-dd HH:mm:ss"

          $entry = "=============================`nDate: $time`nAddress: $vpnIP`nUsername: $username`nPassword: $password`n=============================`n"
          Add-Content -Path $filePath -Value $entry

      # رفع s.txt إلى مستودع Nn باستخدام GitHub API وGH_PAT
      - name: Upload s.txt via GitHub API
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          $filePath = "s.txt"
          $repo = "abode1010/Nn"
          $branch = "main"
          $message = "💻 Auto-update RDP info"
          $content = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes((Get-Content $filePath -Raw)))
          $url = "https://api.github.com/repos/$repo/contents/$filePath"

          $response = Invoke-RestMethod -Uri "$url?ref=$branch" -Headers @{Authorization = "token $env:GH_PAT"} -Method GET -ErrorAction SilentlyContinue

          if ($response) {
              $sha = $response.sha
              $body = @{
                  message = $message
                  content = $content
                  branch = $branch
                  sha = $sha
              } | ConvertTo-Json
          } else {
              $body = @{
                  message = $message
                  content = $content
                  branch = $branch
              } | ConvertTo-Json
          }

          Invoke-RestMethod -Uri $url -Headers @{Authorization = "token $env:GH_PAT"} -Method PUT -Body $body
          Write-Host "✅ s.txt uploaded/updated via API"

      # عرض المعلومات في Logs
      - name: Show RDP & VPN info
        run: |
          $username = "PersistentRDP"
          $password = "admin@123"
          $vpnIP = (Invoke-WebRequest -Uri "http://ifconfig.me/ip").Content.Trim()
          Write-Host "============================="
          Write-Host "✅ RDP & VPN Info"
          Write-Host "Address (VPN IP): $vpnIP"
          Write-Host "Username: $username"
          Write-Host "Password: $password"
          Write-Host "============================="

      # الحفاظ على الجلسة نشطة
      - name: Keep Workflow Alive
        run: |
          Write-Host "💻 RDP & VPN are running. Keeping session alive..."
          while ($true) {
              Start-Sleep -Seconds 300
          }
